var exerciseEditorModule = angular.module('exercises.editor', [
  'ui.bootstrap',
  'ngSanitize',
  'toaster',
  'exercises.dials'
]);

exerciseEditorModule.directive('exerciseEditor', function () {
  return {
    restrict: 'E',
    scope: {
      exercise: '=exercise',
      onExerciseRemove: '&onExerciseRemove',
      onApplyToAllSeries: '&onApplyToAllSeries'
    },
    controller: ['$scope', function ($scope) {
      var REPETITIONS_STEP = 1;
      var WEIGHT_STEP = 5;
      var REST_STEP = 5;

      $scope.setExerciseToManual = function () {
        $scope.exercise.guidance_type = 'manual';
      };

      $scope.setExerciseToDuration = function () {
        $scope.exercise.guidance_type = 'duration';
      };

      $scope.changeSelectedSeries = function (exercise, seriesIdx) {
        exercise.selectedSeries = seriesIdx;
      };

      $scope.getSelectedSeries = function (exercise) {
        if (exercise.selectedSeries == undefined) {
          exercise.selectedSeries = 0;
        }
        return exercise.series[exercise.selectedSeries];
      };

      $scope.addSeries = function (exercise) {
        exercise.series.push(angular.copy($scope.getSelectedSeries(exercise)));
      };

      $scope.increaseSeriesRepetitions = function (exercise) {
        $scope.getSelectedSeries(exercise).repeat_count += REPETITIONS_STEP;
      };

      $scope.decreaseSeriesRepetitions = function (exercise) {
        var series = $scope.getSelectedSeries(exercise);
        series.repeat_count = series.repeat_count < REPETITIONS_STEP ? 0 : series.repeat_count - REPETITIONS_STEP;
      };

      $scope.increaseSeriesWeight = function (exercise) {
        $scope.getSelectedSeries(exercise).weight += WEIGHT_STEP;
      };

      $scope.decreaseSeriesWeight = function (exercise) {
        var series = $scope.getSelectedSeries(exercise);
        series.weight = series.weight < WEIGHT_STEP ? 0 : series.weight - WEIGHT_STEP;
      };

      $scope.increaseSeriesRest = function (exercise) {
        $scope.getSelectedSeries(exercise).rest_time += REST_STEP;
      };

      $scope.decreaseSeriesRest = function (exercise) {
        var series = $scope.getSelectedSeries(exercise);
        series.rest_time = series.rest_time < REST_STEP ? 0 : series.rest_time - REST_STEP;
      };
    }],
    templateUrl: '<%= asset_path('exercises/exercise-editor.html') %>'
  };
});


exerciseEditorModule.directive('durationExerciseEditor', function () {
  return {
    restrict: 'E',
    scope: {
      exercise: '=exercise'
    },
    controller: ['$scope', function ($scope) {

      $scope.selectedSeries = $scope.exercise.series[0];

      $scope.changeSelectedSeries = function (seriesIdx) {
        $scope.selectedSeries = $scope.exercise.series[seriesIdx];
      };

      $scope.incrementDuration = function () {
        $scope.getSelectedSeries().repeat_count += 25;
      };

      $scope.decrementDuration = function () {
        $scope.getSelectedSeries().repeat_count -= 25;
      };

    }],
    templateUrl: '<%= asset_path('exercises/duration-exercise-editor.html') %>'
  };
});


exerciseEditorModule.directive('seriesEditor', function () {
  return {
    restrict: 'E',
    scope: {
      series: '=',
      onSelectedSeriesChanged: '&'
    },
    controller: ['$scope', function ($scope) {

      $scope.selectedSeriesIndex = 0;

      $scope.getSelectedSeries = function () {
        return $scope.series[$scope.selectedSeriesIndex];
      };

      $scope.changeSelectedSeries = function (seriesIdx) {
        $scope.selectedSeriesIndex = seriesIdx;
        $scope.onSelectedSeriesChanged({index: seriesIdx});
      };

      $scope.addSeries = function () {
        $scope.series.push(angular.copy($scope.getSelectedSeries()));
      };

      $scope.removeSeries = function () {
        if ($scope.series.length > 1) {
          if ($scope.selectedSeriesIndex >= $scope.series.length - 1) {
            $scope.changeSelectedSeries($scope.series.length - 2);
          }
          $scope.series.splice($scope.selectedSeriesIndex, 1);
        }
      };

      $scope.incrementDuration = function () {
        $scope.getSelectedSeries().repeat_count += 25;
      };

      $scope.decrementDuration = function () {
        $scope.getSelectedSeries().repeat_count -= 25;
      };
    }],
    templateUrl: '<%= asset_path('exercises/series-editor.html') %>'
  };
});