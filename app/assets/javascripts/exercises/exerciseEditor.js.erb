var exerciseEditorModule = angular.module('exercises.editor', [
  'ui.bootstrap',
  'ngSanitize',
  'exercises.dials',
  'trainees',
  'trainees',
  'photos.takePhotoDialog',
  'users.exerciseTypes.photos',
  'angularSpinner'
]);

exerciseEditorModule.directive('exerciseEditor', function () {
  return {
    restrict: 'E',
    scope: {
      exercise: '=exercise',
      training: '=training',
      onExerciseRemove: '&onExerciseRemove',
      onApplyToAllSeries: '&onApplyToAllSeries'
    },
    controller: ['$scope', 'TakePhotoDialog', 'UserExerciseTypePhotos', 'usSpinnerService', function ($scope, TakePhotoDialog, UserExerciseTypePhotos, usSpinnerService) {

      $scope.setExerciseToManual = function () {
        $scope.exercise.guidance_type = 'manual';
      };

      $scope.setExerciseToDuration = function () {
        $scope.exercise.guidance_type = 'duration';
      };

      function startSpinner() {
        usSpinnerService.spin('user-exercise-type-photo-upload-spinner');
      }

      function stopSpinner() {
        usSpinnerService.stop('user-exercise-type-photo-upload-spinner');
      }

      function hideDescription() {
        $scope.showDescription = false;
      }

      function uploadExerciseTypePhoto(photo) {
        startSpinner();
        var exerciseType = $scope.exercise.exercise_type;
        var trainee = $scope.training.trainee;
        UserExerciseTypePhotos.add(trainee.id, exerciseType.id, photo)
          .then(stopSpinner, stopSpinner)
          .then(hideDescription);
      }

      $scope.onTakePhotosClicked = function () {
        TakePhotoDialog().result
          .then(function (photos) {
            uploadExerciseTypePhoto(photos[0]);
          });
      };
    }],
    templateUrl: '<%= asset_path('exercises/exercise-editor.html') %>'
  };
});


exerciseEditorModule.directive('manualExerciseEditor', function () {
  return {
    restrict: 'E',
    scope: {
      exercise: '=exercise'
    },
    controller: ['$scope', function ($scope) {
      var REPETITIONS_STEP = 1;
      var WEIGHT_STEP = 5;
      var REST_STEP = 5;

      $scope.selectedSeries = $scope.exercise.series[0];

      $scope.changeSelectedSeries = function (series) {
        $scope.selectedSeries = series;
      };

      $scope.increaseSeriesRepetitions = function () {
        $scope.selectedSeries.repeat_count += REPETITIONS_STEP;
      };

      $scope.decreaseSeriesRepetitions = function () {
        var series = $scope.selectedSeries;
        series.repeat_count = series.repeat_count < REPETITIONS_STEP ? 0 : series.repeat_count - REPETITIONS_STEP;
      };

      $scope.increaseSeriesWeight = function () {
        $scope.selectedSeries.weight += WEIGHT_STEP;
      };

      $scope.decreaseSeriesWeight = function () {
        var series = $scope.selectedSeries;
        series.weight = series.weight < WEIGHT_STEP ? 0 : series.weight - WEIGHT_STEP;
      };

      $scope.increaseSeriesRest = function () {
        $scope.selectedSeries.rest_time += REST_STEP;
      };

      $scope.decreaseSeriesRest = function () {
        var series = $scope.selectedSeries;
        series.rest_time = series.rest_time < REST_STEP ? 0 : series.rest_time - REST_STEP;
      };

    }],
    templateUrl: '<%= asset_path('exercises/manual-exercise-editor.html') %>'
  };
});


exerciseEditorModule.directive('durationExerciseEditor', function () {
  return {
    restrict: 'E',
    scope: {
      exercise: '=exercise'
    },
    controller: ['$scope', function ($scope) {

      $scope.selectedSeries = $scope.exercise.series[0];

      $scope.changeSelectedSeries = function (series) {
        $scope.selectedSeries = series;
      };

      $scope.incrementDuration = function () {
        $scope.selectedSeries.repeat_count += 25;
      };

      $scope.decrementDuration = function () {
        $scope.selectedSeries.repeat_count -= 25;
      };

    }],
    templateUrl: '<%= asset_path('exercises/duration-exercise-editor.html') %>'
  };
});


exerciseEditorModule.directive('seriesEditor', function () {
  return {
    restrict: 'E',
    scope: {
      series: '=',
      onSelectedSeriesChanged: '&'
    },
    controller: ['$scope', function ($scope) {

      $scope.selectedSeriesIndex = 0;
      $scope.selectedSeries = $scope.series[0];

      $scope.changeSelectedSeries = function (seriesIdx) {
        $scope.selectedSeriesIndex = seriesIdx;
        $scope.selectedSeries = $scope.series[seriesIdx];
        $scope.onSelectedSeriesChanged({series: $scope.selectedSeries});
      };

      $scope.addSeries = function () {
        $scope.series.push(angular.copy($scope.selectedSeries));
      };

      $scope.removeSeries = function () {
        if ($scope.series.length > 1) {
          $scope.series.splice($scope.selectedSeriesIndex, 1);
          if ($scope.selectedSeriesIndex >= $scope.series.length) {
            $scope.changeSelectedSeries($scope.series.length - 1);
          } else {
            $scope.changeSelectedSeries($scope.selectedSeriesIndex);
          }
        }
      };

      $scope.incrementDuration = function () {
        $scope.selectedSeries.repeat_count += 25;
      };

      $scope.decrementDuration = function () {
        $scope.selectedSeries.repeat_count -= 25;
      };
    }],
    templateUrl: '<%= asset_path('exercises/series-editor.html') %>'
  };
});