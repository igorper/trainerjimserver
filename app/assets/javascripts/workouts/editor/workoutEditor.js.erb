angular.module('workouts.editor', [
  'ui.router',
  'ui.bootstrap',
  'ui.sortable',
  'trainings',
  'toaster',
  'exerciseTypes.selector',
  'exerciseTypes.exerciseType',
  'exerciseTypes.exerciseTypeDetails',
  'exercises.editor'
])
  .directive('workoutEditor', function () {
    return {
      restrict: 'E',
      scope: {
        training: '=',
        trainer: '=',
        onSaveClicked: '&',
        onDeleteClicked: '&'
      },
      controller: 'WorkoutEditorCtrl',
      templateUrl: '<%= asset_path('workouts/editor/workout-editor.html') %>'
    };
  })
  .controller('WorkoutEditorCtrl', ['$scope', 'ExerciseType', 'ExerciseTypesSelector', 'ExerciseTypeDetailsDialog', function ($scope, ExerciseType, ExerciseTypesSelector, ExerciseTypeDetailsDialog) {
    $scope.fetchExerciseType = function (exerciseTypeId) {
      return ExerciseType.get({id: exerciseTypeId});
    };

    $scope.showExerciseTypeDetails = function (exerciseType) {
      ExerciseTypeDetailsDialog(exerciseType);
    };

    $scope.sortableOptions = {
      handle: '.move'
    };

    $scope.removeExercise = function (exercise) {
      // at least one exercise has to be left in the training
      if ($scope.training.exercises.length > 1) {
        $scope.training.exercises.splice($scope.training.exercises.indexOf(exercise), 1);
      }
    };

    $scope.applyToAllSeries = function (exercise) {
      var selectedSeries = exercise.series[exercise.selectedSeries];
      for (var i = 0; i < $scope.training.exercises.length; i++) {
        var loopedExercise = $scope.training.exercises[i];
        // set selected series information to all series of the same exercise type.
        // we have to loop all the exercises and not just set series information for
        // the input exercise, as the same exercise could be added many times to the training plan
        // (this is particularly common in training plans where different exercises are added in blocks of e.g.
        // one series of two successive exercise without rest)
        if (loopedExercise.exercise_type.id == exercise.exercise_type.id) {
          for (var j = 0; j < loopedExercise.series.length; j++) {
            var loopedSeries = loopedExercise.series[j];
            loopedSeries.repeat_count = selectedSeries.repeat_count;
            loopedSeries.weight = selectedSeries.weight;
            loopedSeries.rest_time = selectedSeries.rest_time;
          }
        }
      }
    };

    function addExercise(exerciseType) {
      $scope.training.exercises.push({
        duration_after_repetition: null,
        duration_up_repetition: null,
        duration_middle_repetition: null,
        duration_down_repetition: null,
        guidance_type: "manual",
        selectedSeries: 0,
        series: [
          {
            repeat_count: 0,
            weight: 0,
            rest_time: 0
          }
        ],
        exercise_type: exerciseType
      });
    }

    $scope.editExercise = function () {
      ExerciseTypesSelector({onAddExerciseType: addExercise});
    };
  }])
;

