var exerciseTypesSelector = angular.module('exerciseTypes.selector', [
  'exerciseTypes.exerciseType',
  'exerciseGroups.exerciseGroup',
  'exerciseTypes.exerciseTypePanel',
  'users.exerciseTypes.photos',
  'toaster',
  'pascalprecht.translate'
]);

exerciseTypesSelector.factory('ExerciseTypesSelector', ['$modal', function ($modal) {
  return function (options) {
    return $modal.open({
      templateUrl: '<%= asset_path('exerciseTypes/exercise-type-selector.html') %>',
      controller: ['$scope', '$modalInstance', 'ExerciseGroup', 'ExerciseType', 'UserExerciseTypePhotos', 'toaster', '$translate',
        function ($scope, $modalInstance, ExerciseGroup, ExerciseType, UserExerciseTypePhotos, toaster, $translate) {
        options = angular.extend(
          {onAddExerciseType: $modalInstance.close},
          options
        );
        refreshExerciseTypesList();
        $scope.exerciseGroups = ExerciseGroup.query();
        $scope.userExerciseTypePhotos = UserExerciseTypePhotos.primaryPhotos();
        $scope.addedExcercisesCount = 0;
        $scope.editorUserId = options.editorUserId;
        $scope.isAdminMode = options.isAdministrator;

        function refreshExerciseTypesList() {
          $scope.exerciseTypes = ExerciseType.query(
            {language: $translate.proposedLanguage()}
          );
        }

        $scope.onExerciseTypeClicked = function (exerciseType) {
          options.onAddExerciseType(exerciseType);
          ++$scope.addedExcercisesCount;
        };

        $scope.onExerciseTypeAddClicked = function () {
          $scope.editedExerciseType = new ExerciseType();
        };

        $scope.onExerciseTypeEditClicked = function (exerciseType) {
          $scope.editedExerciseType = new ExerciseType(exerciseType);
        };

        $scope.onExerciseTypeDeleteClicked = function (exerciseType) {
          ExerciseType.delete({id: exerciseType.id}, refreshExerciseTypesList, function () {
            toaster.pop("error", "Exercise type not deleted", "Could not delete the exercise type. The exercise type is in use.");
          });
        };

        $scope.onExerciseTypeSaved = function () {
          $scope.editedExerciseType = null;
          refreshExerciseTypesList();
          refreshPhotoListIfDirty();
        };

        $scope.onEditCancelClicked = function () {
          $scope.editedExerciseType = null;
          refreshPhotoListIfDirty();
        };

        $scope.onPhotoAdded = markPhotoListAsDirty;

        $scope.onPhotoRemoved = markPhotoListAsDirty;

        function markPhotoListAsDirty() {
          $scope.isPhotoListDirty = true;
        }

        function refreshPhotoListIfDirty() {
          if ($scope.isPhotoListDirty) {
            $scope.userExerciseTypePhotos = UserExerciseTypePhotos.primaryPhotos();
          }
        }

        $scope.cancel = function () {
          if ($scope.addedExcercisesCount > 0) {
            $modalInstance.close({addedExercisesCount: $scope.addedExcercisesCount});
          } else {
            $modalInstance.dismiss();
          }
        };
      }],
      backdrop: true,
      size: 'lg',
      windowClass: 'modal-window exercise-type-selector'
    });
  };
}]);